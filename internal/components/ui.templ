package components

import "practicebetter/internal/heroicons"

script ShowModal(id string) {
	document.getElementById(id).showModal();
}

script CloseModal(id string) {
	const modal = document.getElementById(id);
	modal.classList.add('close'); // run animation here

	requestAnimationFrame(function () {
		requestAnimationFrame(function () {
			modal.classList.remove('close');
			modal.close(); // then run the default close method
		});
	});
}

templ ClearButton(buttonType string) {
	<button
 		type={ buttonType }
 		class="flex gap-1 justify-center items-center py-2 px-4 text-lg font-semibold text-white bg-transparent border border-white hover:bg-white/20"
	>
		{ children... }
	</button>
}

templ ClearButtonLink(href, hxTarget, hxSwap  string) {
	<a
 		href={ templ.URL(href) }
 		hx-get={ string(templ.URL(href)) }
 		hx-target={ hxTarget }
 		hx-push-url="true"
 		hx-swap={ hxSwap + " swap:400ms" }
 		class="flex gap-1 justify-center items-center py-2 px-4 text-lg font-semibold text-white bg-transparent border border-white hover:bg-white/20"
	>
		{ children... }
	</a>
}

templ GreenButton(buttonType string, onClick templ.ComponentScript) {
	<button
 		type={ buttonType }
 		onclick={ onClick }
 		class="flex gap-1 justify-center items-center py-2 px-4 font-semibold text-green-800 rounded-xl transition duration-200 bg-green-700/10 hover:bg-green-700/20 focusable"
	>
		{ children... }
	</button>
}

templ RedButton(buttonType string, onClick templ.ComponentScript) {
	<button
 		type={ buttonType }
 		onclick={ onClick }
 		class="flex gap-1 justify-center items-center py-2 px-4 font-semibold text-red-800 rounded-xl transition duration-200 bg-red-700/10 hover:bg-red-700/20 focusable"
	>
		{ children... }
	</button>
}

templ BasicButton(class string, buttonType string) {
	<button
 		type={ buttonType }
 		class={ "focusable flex items-center justify-center gap-1 rounded-xl px-4 py-2 font-semibold transition duration-200 bg-neutral-700/10 text-neutral-800 hover:bg-neutral-700/20", class }
	>
		{ children... }
	</button>
}

templ BasicButtonLink(href, hxTarget, hxSwap  string) {
	<a
 		href={ templ.URL(href) }
 		hx-get={ string(templ.URL(href)) }
 		hx-target={ hxTarget }
 		hx-push-url="true"
 		hx-swap={ hxSwap + " swap:305ms" }
 		class="flex gap-1 justify-center items-center py-2 px-4 font-semibold rounded-xl transition duration-200 bg-neutral-700/10 text-neutral-800 hover:bg-neutral-700/20 focusable"
	>
		{ children... }
	</a>
}

templ PracticeToolNav(activePath string) {
	<practice-tool-nav activePath={ activePath }></practice-tool-nav>
}

templ ReadMoreButton(id string) {
	<button
 		class={ navClasses }
 		onclick={ ShowModal(id) }
	>
		Read More
		@heroicons.IconInformationCircleSolid("-mr-1 h-5 w-5")
	</button>
}

type BreadcrumbInfo struct {
	Label  string
	Href   string
	Active bool
}

templ Breadcrumb(bc []BreadcrumbInfo) {
	<nav aria-label="Breadcrumb" class="block">
		<ul class="flex flex-grow-0 py-2 px-4 rounded-xl sm:text-xl bg-neutral-900/10">
			for i, b := range bc {
				<li
 					class={ "flex items-center", templ.KV("text-neutral-900", b.Active), templ.KV("text-neutral-900/50", !b.Active) }
 					if b.Active {
						aria-current="true"
					}
				>
					@HxLink("", b.Href, "#main-content") {
						{ b.Label }
					}
					if i != len(bc) - 1 {
						<span class="inline-block">
							@heroicons.IconChevronRightSolid("w-8 h-8")
						</span>
					}
				</li>
			}
		</ul>
	</nav>
}

// TODO: make actual link

templ PieceCard(piece string) {
	<li>
		@HxLink("focusable flex rounded-xl bg-neutral-700/10 px-6 py-4 text-neutral-700 hover:bg-neutral-700/20", "/library/pieces/single", "#main-content") {
			<div class="flex flex-col flex-1 flex-grow gap-1">
				<div>
					<strong class="text-xl font-bold">{ piece }</strong> â€”{ " " }
					COMPOSER
				</div>
				<div>Active Spots: ACTIVE SPOTS</div>
				<div>Finished Spots: INACTIVE SPOTS</div>
			</div>
			<div class="flex flex-grow-0 items-center">
				<div class="sr-only">Click to view</div>
				@heroicons.IconDocumentMagnifyingGlassSolid("w-10 h-10 -mr-2")
			</div>
		}
	</li>
}
