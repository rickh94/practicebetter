package authpages

import "github.com/go-webauthn/webauthn/protocol"
import "practicebetter/internal/components"
import "practicebetter/internal/heroicons"

// TODO: maybe switch to using htmx for the ajax

script startLogin(loginOptions *protocol.CredentialAssertion, csrf string, nextLoc string) {
  SimpleWebAuthnBrowser.startAuthentication(loginOptions.publicKey).then(attResp => {
    fetch('/auth/passkey/login', {
      method: 'POST',
      headers: {
	'Content-Type': 'application/json',
	'X-CSRF-TOKEN': csrf,
      },
      body: JSON.stringify(attResp),
    }).then(res => res.json()).then(res => {
	if (res.status == "ok") {
		window.location.href = nextLoc;
	} else {
		console.log(res);
	}
    }).catch(err => console.log(err));
  }).catch(err => console.log(err));
}

templ FinishPasskeyLoginPage(loginOptions *protocol.CredentialAssertion, csrf string, nextLoc string) {
	<title>Login | Practice Better</title>
	@components.HeroLayout(components.LeftButtonBar(components.BackHomeLink(), components.Empty())) {
		<div class="flex flex-col gap-4 w-full sm:w-72">
			<div>
				<h1 class="text-4xl font-bold">Finish Login</h1>
				<p class="py-2 text-sm sm:mx-auto sm:max-w-2xl text-neutral-700">
					You should be prompted to sign in by your browser using a passkey. If there is an error you
					you donâ€™t have a passkey on this device, click below to sign in using your email addess
				</p>
			</div>
			@components.BasicButtonLink("/auth/code", "#main-content", "outerHTML") {
				Get Login Code
				@heroicons.IconHashtagSolid("-mr-1 size-6")
			}
			<a
 				href={ templ.URL("/auth/forget") }
 				class="action-button bg-neutral-700/10 text-neutral-800 hover:bg-neutral-700/20 focusable"
			>
				Switch Account
				@heroicons.IconUserMinusSolid("-mr-1 size-6")
			</a>
			<button class="hidden" onclick={ startLogin(loginOptions, csrf, nextLoc) } id="passkey"></button>
		</div>
	}
	<script>
		let started = false
		document.addEventListener("DOMContentLoaded", () => {
			if (!started) {
				document.getElementById("passkey").click();
			}
		});
		document.addEventListener("htmx:afterSettle", () => {
			if (!started) {
				document.getElementById("passkey").click();
			}
		});
	</script>
}
