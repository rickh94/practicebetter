package planpages

import "practicebetter/internal/db"
import "practicebetter/internal/components"
import "practicebetter/internal/pages"

script changeSelectedIntensity(value string) {
	for (const el of document.querySelectorAll('#intensities .radio-option')) {
		if (el.id === `intensity-${value}-label`) {
			el.classList.add('checked');
		} else {
			el.classList.remove('checked');
		}
	}
}

script togglePieceChecked(value string) {
	document.getElementById(`piece-${value}-label`).classList.toggle('checked');
}

script toggleChecked(id string) {
	document.getElementById(id).classList.toggle('checked');
}

// TODO: improve language and formatting
// TODO: add read about practice types/video

templ CreatePracticePlanPage(s pages.ServerUtil, csrf string, pieces []db.ListActiveUserPiecesRow) {
	<title>Create Practice Plan | Practice Better</title>
	@components.SingleColumnLayout(components.TwoButtonBar(components.InternalNav(), components.HeadingText("Create Practice Plan") , components.MaybePracticePlan())) {
		@components.BreadcrumbContainer() {
			@components.Breadcrumb([]components.BreadcrumbInfo{
					{ Label: "Library", Href: "/library", Active: false },
					{ Label: "Practice Plans", Href: "/library/plans", Active: false },
					{ Label: "New", Href: "/library/plans/create", Active: true },
				})
		}
		@components.NormalContainer() {
			<form
 				class="flex flex-col"
 				action="/library/plans"
 				method="post"
 				hx-post="/library/plans"
 				hx-target="#main-content"
 				hx-swap="outerHTML transition:true"
			>
				@createPracticePlanFormFields(csrf, pieces)
			</form>
		}
	}
}

templ createPracticePlanFormFields(csrf string, pieces []db.ListActiveUserPiecesRow) {
	<input type="hidden" name="gorilla.csrf.Token" value={ csrf }/>
	<div class="flex flex-wrap gap-2 w-full">
		<label class="sr-only" for="intensity">Plan Intensity</label>
		<div class="flex flex-nowrap flex-shrink-0 items-center h-10">
			<span class="flex-shrink-0 text-lg align-middle text-pretty text-neutral-800">I would like a</span>
		</div>
		<select
 			required
 			id="intensity"
 			name="intensity"
 			class="flex-grow-0 py-2 pr-8 pl-4 w-max h-10 rounded-xl transition duration-200 bg-neutral-700/10 text-neutral-800 placeholder-neutral-600 custom-select focusable focus:bg-neutral-700/20"
		>
			<option value="light">
				Light
			</option>
			<option value="medium" selected>
				Medium
			</option>
			<option value="heavy">
				Heavy
			</option>
		</select>
		<div class="flex flex-nowrap flex-shrink-0 items-center h-10">
			<span class="flex-shrink-0 text-lg text-pretty text-neutral-800">intensity practice session,</span>
		</div>
		<div class="flex flex-nowrap flex-shrink-0 items-center h-10">
			<span class="flex-shrink-0 text-lg whitespace-nowrap text-neutral-800">where I will practice: </span>
		</div>
		<div class="flex flex-col flex-wrap gap-2 w-full xs:flex-row xs:w-auto">
			@practiceCheckbox("icon-[iconamoon--bookmark-thin]","Interleave Spots", "practice_interleave", true)
			@practiceCheckbox("icon-[iconamoon--playlist-shuffle-thin]","Random Spots", "practice_random_single", true)
			@practiceCheckbox("icon-[custom--random-boxes]","Random Starting Point", "practice_starting_point", false)
			@practiceCheckbox("icon-[iconamoon--playlist-repeat-list-thin]","New Spots", "practice_new", true)
		</div>
	</div>
	<section id="pieces" class="grid grid-cols-1 gap-2 mt-4 sm:grid-cols-2 md:col-span-2 lg:grid-cols-3 h-min">
		<p class="col-span-full pb-1 w-full text-lg leading-6 text-neutral-800">I will practice these pieces:</p>
		for i, piece := range pieces {
			if piece.Composer.Valid {
				@pieceCheckbox(piece.Title + " - " + piece.Composer.String, piece.ID, i < 3)
			} else {
				@pieceCheckbox(piece.Title, piece.ID, i < 3)
			}
		}
	</section>
	<section id="customize" class="flex col-span-full justify-end pt-4 w-full">
		<label class="flex gap-2 items-center px-2 font-medium accent-neutral-800 focusable">
			<span class="text-neutral-800">Customize after creating</span>
			<input type="checkbox" name="customize" class="focus:outline-none"/>
		</label>
	</section>
	<div class="flex flex-row-reverse col-span-full gap-4 justify-start py-4">
		<button
 			type="submit"
 			class="text-green-800 action-button bg-green-700/10 hover:bg-green-700/20 focusable"
		>
			<span class="-ml-1 size-6 icon-[custom--music-file-curly-pencil]" aria-hidden="true"></span>
			Create
		</button>
		@components.HxLink("action-button text-yellow-800 bg-yellow-700/10 hover:bg-yellow-700/20 focusable", "/library", "#main-content") {
			<span class="-ml-1 size-6 icon-[iconamoon--arrow-left-5-circle-thin]" aria-hidden="true"></span>
			Go Back
		}
	</div>
}

templ pieceCheckbox(text string, value string,  checked bool) {
	<label
 		for={ "piece-" + value }
 		class={ "piece-checkbox cursor-pointer h-full focusable", templ.KV("checked", checked) }
 		id={ "piece-" + value + "-label" }
	>
		<input
 			type="checkbox"
 			name="pieces"
 			id={ "piece-" + value }
 			value={ value }
 			onchange={ togglePieceChecked(value) }
 			class="sr-only"
 			aria-labelledby={ "piece-" + value + "-label" }
 			checked?={ checked }
		/>
		<span class="flex flex-1">
			<span class="flex-col font-medium">
				{ text }
			</span>
		</span>
		<span class="-ml-4 text-indigo-800 size-6 icon icon-[iconamoon--check-circle-1-duotone]" aria-hidden="true"></span>
	</label>
}

templ practiceCheckbox(iconClass string, text string, value string, checked bool) {
	<label
 		for={ value }
 		class={ "flex w-full xs:w-auto relative bg-white items-center py-3 pr-2 pl-4 rounded-xl cursor-pointer practice-radio-option focusable", templ.KV("checked", checked) }
 		id={ value + "-label" }
	>
		<input
 			type="checkbox"
 			name={ value }
 			id={ value }
 			onchange={ toggleChecked(value + "-label") }
 			class="sr-only"
 			aria-labelledby={ value + "-label" }
 			checked?={ checked }
		/>
		<span class="flex flex-1 gap-1 items-center">
			<span class={ iconClass, "size-5 -ml-1" } aria-hidden="true"></span>
			<span>
				{ text }
			</span>
		</span>
		<span class="ml-3 text-black size-5 icon icon-[iconamoon--check-circle-1-duotone]" aria-hidden="true"></span>
		<span class="absolute -inset-px rounded-xl border-2 pointer-events-none radio-border" aria-hidden="true"></span>
	</label>
}
