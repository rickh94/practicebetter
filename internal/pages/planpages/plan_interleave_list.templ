package planpages

import "practicebetter/internal/components"
import "strconv"

script interleaveShowNext(i int) {
	document.querySelector(`[data-interleave-page="${i}"]`).classList.add('hidden');
	document.querySelector(`[data-interleave-page="${i+1}"]`).classList.remove('hidden');
}

script interleaveShowPrev(i int) {
	document.querySelector(`[data-interleave-page="${i}"]`).classList.add('hidden');
	document.querySelector(`[data-interleave-page="${i-1}"]`).classList.remove('hidden');
}

script startInterleavePracticing(id string) {
	document.getElementById(id).showModal();
	globalThis.handleShowModal();
	const close = () => {
		globalThis.handleCloseModal();
		const modal = document.getElementById(id);

		globalThis.handleCloseModal();
		modal.classList.add('close');
		setTimeout(() => {
			modal.close();
			modal.classList.remove('close');
		}, 155);
		globalThis.removeEventListener("FinishedInterleave", close);
	};
	globalThis.addEventListener("FinishedInterleave", close);
}

templ PracticePlanInterleaveSpots(interleaveSpots []PracticePlanSpot, planID string, csrf string, allCompleted bool, active bool, showHeading bool) {
	<section id="interleave-spots" class="flex flex-col gap-2">
		if showHeading {
			<h3 class="px-2 pb-1 text-xl font-semibold text-center border-b-2 border-black">Interleave Spots</h3>
			<p class="w-full text-sm">Play these spots throughout your practicing. Try to play them correctly the first time.</p>
		}
		if active {
			<button
 				class="px-4 text-lg action-button violet focusable"
 				hx-get={ "/library/plans/" + planID + "/interleave/start" }
 				hx-target={ "#" + components.INTERLEAVE_SPOT_DIALOG_CONTENTS_ID }
 				hx-swap="innerHTML transition:true"
 				hx-on::after-request={ startInterleavePracticing(components.INTERLEAVE_SPOT_DIALOG_ID) }
			>
				Go Practice
				<span
 					class="-ml-1 icon-[iconamoon--player-play-thin] size-5"
 					aria-hidden="true"
				></span>
			</button>
		}
		@InterleaveSpotsList(interleaveSpots, active)
	</section>
}

templ InterleaveSpotsList(interleaveSpots []PracticePlanSpot, active bool) {
	<ul id="interleave-spot-list" class="flex flex-col gap-2 w-full list-none overflow-x-clip">
		for i := 0; i*4 < len(interleaveSpots); i++ {
			@InterleaveListPage(i, interleaveSpots, active)
		}
	</ul>
	<dialog id={ components.INTERLEAVE_SPOT_DIALOG_ID } class="flex flex-col gap-2 p-4 text-left bg-transparent focus:outline-none clear">
		<div id={ components.INTERLEAVE_SPOT_DIALOG_CONTENTS_ID } class="p-0 mx-auto w-huge overflow-x-clip">
			<span class="p-4 bg-white rounded-xl">
				Loading Interleave Spot...
			</span>
		</div>
		<div class="p-0 mx-auto mt-2 w-auto bg-white rounded-xl border border-neutral-500 overflow-x-clip">
			<button class="w-auto amber action-button focusable" onClick={ components.CloseModal(components.INTERLEAVE_SPOT_DIALOG_ID) }>
				<span class="-ml-1 size-5 icon-[iconamoon--sign-times-circle-thin]" aria-hidden="true"></span>
				Close
			</button>
		</div>
	</dialog>
}

templ InterleaveListPage(i int, interleaveSpots []PracticePlanSpot, active bool) {
	<div data-interleave-page={ strconv.Itoa(i) } class={ "flex flex-col gap-2", templ.KV("hidden", i != 0) }>
		for j := i*4; j < (i+1)*4 && j < len(interleaveSpots); j++ {
			@components.InterleaveSpotCard(
				interleaveSpots[j].PieceID,
				interleaveSpots[j].ID,
				interleaveSpots[j].Name,
				interleaveSpots[j].Measures,
				"interleave",
				interleaveSpots[j].PieceTitle,
				interleaveSpots[j].Completed,
			)
		}
		<div class="flex justify-between w-full">
			if i != 0 {
				<button
 					onClick={ interleaveShowPrev(i) }
 					type="button"
 					class="action-button neutral focusable"
				>
					<span class="-ml-1 size-6 icon-[iconamoon--arrow-left-6-circle-thin]" aria-hidden="true"></span>
					Previous
				</button>
			} else {
				<div></div>
			}
			if (i+1)*4 < len(interleaveSpots) {
				<button
 					onClick={ interleaveShowNext(i) }
 					type="button"
 					class="action-button neutral focusable"
				>
					Next
					<span class="-mr-1 size-6 icon-[iconamoon--arrow-right-6-circle-thin]" aria-hidden="true"></span>
				</button>
			}
		</div>
	</div>
}
