package librarypages

import "practicebetter/internal/components"
import "practicebetter/internal/db"
import "database/sql"
import "practicebetter/internal/pages"

// TODO: component to parse and combine practice session info and group by date (has to be on frontend because of timezone).

templ Dashboard(s pages.ServerUtil, pieces []db.ListRecentlyPracticedPiecesRow, hasActivePlan bool, activePracticePlan components.PracticePlanCardInfo, recentPracticePlans []components.PracticePlanCardInfo) {
	<title>Library | Go Practice</title>
	@components.SingleColumnLayout(components.TwoButtonBar(components.InternalNav(), components.HeadingText("Library") , components.MaybePracticePlan())) {
		@components.TwoColumnContainer() {
			<div class="flex flex-col gap-4 pt-2 mt-4 sm:pt-4 md:pt-0">
				<h2 class="text-2xl font-bold text-center">
					Your Practicing
				</h2>
				if hasActivePlan {
					@components.PracticePlanCard(activePracticePlan)
				} else {
					@components.HxLink("gap-2 py-6 px-6 h-16 sm:h-20 md:h-24 text-2xl sm:text-3xl font-semibold action-button violet focusable", "/library/plans/create", "#main-content") {
						<span class="-ml-1 size-8 icon-[custom--music-file-curly-pencil] sm:size-10" aria-hidden="true"></span>
						Go Practice
					}
				}
				<div class="flex flex-col gap-2 p-4 w-full rounded-xl bg-neutral-700/10">
					<h3 class="text-2xl font-bold col-span">Recent Practice Plans</h3>
					for _, plan := range recentPracticePlans {
						@components.PracticePlanCard(plan)
					}
					@components.HxLink("action-button violet focusable", "/library/plans", "#main-content") {
						<span class="-ml-1 size-8 icon-[iconamoon--calendar-2-thin]" aria-hidden="true"></span>
						Past Practice Plans
					}
				</div>
			</div>
			<div class="flex flex-col gap-4 mt-4">
				@LibraryPieceList(pieces)
				<div class="grid grid-cols-1 gap-2 w-full xs:grid-cols-2">
					@components.HxLink("flex-grow action-button indigo focusable", "/library/pieces", "#main-content") {
						<span class="-ml-1 size-8 icon-[custom--music-folder]" aria-hidden="true"></span>
						All Pieces
					}
					@components.HxLink("flex-grow action-button green focusable", "/library/pieces/create", "#main-content") {
						<span class="-ml-1 size-8 icon-[custom--music-note-edit]" aria-hidden="true"></span>
						New Piece
					}
				</div>
			</div>
		}
	}
}

func composerOrDefault(composer sql.NullString) string {
	if composer.Valid {
		return composer.String
	}
	return "Unknown Composer"
}

templ LibraryPieceList(pieces []db.ListRecentlyPracticedPiecesRow) {
	<h2 class="text-2xl font-bold text-center">Recent Pieces</h2>
	<ul class="flex flex-col gap-4">
		for _, piece := range pieces {
			@components.PieceCard(piece.ID, piece.Title, composerOrDefault(piece.Composer), piece.ActiveSpots, piece.CompletedSpots)
		}
	</ul>
}
