package librarypages

import "practicebetter/internal/components"
import "practicebetter/internal/heroicons"
import "practicebetter/internal/db"
import "database/sql"
import "practicebetter/internal/pages"

// TODO: component to parse and combine practice session info and group by date (has to be on frontend because of timezone).

templ Dashboard(s pages.ServerUtil, pieces []db.ListRecentlyPracticedPiecesRow, hasActivePlan bool, activePracticePlan components.PracticePlanCardInfo, recentPracticePlans []components.PracticePlanCardInfo) {
	<title>Library | Practice Better</title>
	@components.SingleColumnLayout(components.TwoButtonBar(components.InternalNav(), components.HeadingText("Library") , components.MaybePracticePlan())) {
		@components.TwoColumnContainer() {
			<div class="flex flex-col gap-4 pt-2 sm:pt-4 md:pt-0">
				<h2 class="text-2xl font-bold text-center">
					Your Practicing
				</h2>
				if hasActivePlan {
					@components.PracticePlanCard(activePracticePlan)
				} else {
					@components.HxLink("flex gap-2 justify-center items-center py-6 px-6 text-2xl font-semibold text-center text-violet-700 rounded-xl bg-violet-700/10 hover:bg-violet-700/20 focusable", "/library/plans/create", "#main-content") {
						@heroicons.IconDocumentCheckSolid("-ml-2 size-8")
						Start Practicing
					}
				}
				<div class="flex flex-col gap-2 p-4 w-full rounded-xl bg-neutral-700/10">
					<h3 class="text-2xl font-bold col-span">Recent Practice Plans</h3>
					for _, plan := range recentPracticePlans {
						@components.PracticePlanCard(plan)
					}
					@components.HxLink("flex flex-grow gap-2 justify-center items-center py-3 px-6 font-medium text-center text-violet-700 rounded-xl bg-violet-700/10 hover:bg-violet-700/20 focusable", "/library/plans", "#main-content") {
						@heroicons.IconViewColumnsSolid("-ml-1 size-6")
						All Practice Plans
					}
				</div>
			</div>
			<div class="flex flex-col gap-4">
				@LibraryPieceList(pieces)
				<div class="flex flex-col gap-4 w-full sm:flex-row">
					@components.HxLink("flex flex-grow gap-2 justify-center items-center py-3 px-6 font-medium text-center text-sky-700 rounded-xl bg-sky-700/10 hover:bg-sky-700/20 focusable", "/library/pieces", "#main-content") {
						@heroicons.IconViewColumnsSolid("-ml-1 size-5")
						All Pieces
					}
					@components.HxLink("flex flex-grow gap-2 justify-center items-center py-3 px-6 font-medium text-center text-green-700 rounded-xl bg-green-700/10 hover:bg-green-700/20 focusable", "/library/pieces/create", "#main-content") {
						@heroicons.IconDocumentPlusSolid("-ml-1 size-5")
						New Piece
					}
				</div>
			</div>
		}
	}
}

/*

	<div class="hidden flex-col gap-2 p-4 w-full rounded-xl md:block bg-neutral-700/10">
		<h3 class="text-2xl font-bold col-span">Recent Practice Sessions</h3>
		<past-practice-display sessions={ practiceSessions } background="true"></past-practice-display>
		@components.HxLink("flex flex-grow gap-2 justify-center items-center py-3 px-6 font-medium text-center text-amber-700 rounded-xl bg-amber-700/10 hover:bg-amber-700/20 focusable", "/library/practice-sessions", "#main-content") {
			@heroicons.IconViewColumnsSolid("-ml-1 size-6")
			All Practice Sessions
		}
	</div>
*/

func composerOrDefault(composer sql.NullString) string {
	if composer.Valid {
		return composer.String
	}
	return "Unknown Composer"
}

templ LibraryPieceList(pieces []db.ListRecentlyPracticedPiecesRow) {
	<h2 class="text-2xl font-bold text-center">Recent Pieces</h2>
	<ul class="flex flex-col gap-4">
		for _, piece := range pieces {
			@components.PieceCard(piece.ID, piece.Title, composerOrDefault(piece.Composer), piece.ActiveSpots, piece.CompletedSpots)
		}
	</ul>
}
